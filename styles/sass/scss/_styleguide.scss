.site-main {
	clear: both;
}
.site-container {
	margin: $space 0;
	overflow: hidden;
	h1 {
		padding-bottom: 15px;
	}
}
.site-header {
	nav section {
		float: right;
		color:black;
		@include breakpoint($bp-small-3) {
			font-size: 1.1em;
			padding: $space $space-double;
			color:white;
		}
	}
}
.site-banner {
	display: block;
	padding: 25% 0;
	background: url(../../img/li.jpg) center center no-repeat;
	background-size: cover;
}
.site-article {
	padding: $space-double;
	margin-bottom: $space;
	background: lighten($primary, 100);
	text-align:left;
}

/* 
Latest activity block
 */
.latest_activity {
	background: darken($scheme-3, 10);
	padding:$space-half;
	h1 {
		font-size: 1.1em;
		padding-bottom: 0;
	}
}

/* 
Forum table styling --needs tidying up--
 */
.forum--container {
	min-width: 250px;
	a {
		text-decoration: underline;
	}
	margin: 1% 0;
	border: 1px solid $scheme-1;

	thead {
		tr {
			background: darken($scheme-3, 20);
			border-bottom:1px solid black;
		}
		th {
			padding: 10px 0;
			font-size: 1.2em;
		}
	}

	>tbody {
		>td {
			padding-top: $space*1.5;
		}	
		>tr:nth-child(odd) {
			a:hover {
				color: $scheme-4;
			}
			a.btn:hover {
				color:white;
			}
		}
		>tr:nth-child(even) {
			background: $scheme-5;
		}
	}
	.forum--group-title {
		th {
			background: darken($scheme-3, 20);
			font-size: 1.4em;
			padding:$space-half/2;
		}
	}
	.forum--empty {
		padding: 10px;
	}
	.forum--title {
		@include span(9 of 12);
		padding-left: $space;
		a {
			text-decoration: none;
			display: block;
			padding: $space*1.5 $space;
		}
	}
	td.forum--title {
		padding: 0;
		line-height: 1;
		span {
			font-size: 0.8em;
			font-style: italic;
		}
	}
	.forum--latest {
		@include span(3 of 12);
	}
	td.forum--latest, td.forum--stats, td.forum--author, .forum--meta {
		font-size: 0.9em;
	}
	
	@include breakpoint($bp-med) {
		&.index {
			.forum--title {
				@include span(8 of 12);
			}
			.forum--stats, .forum--author {
				text-align: center;
			}
		}
		.forum--title {
			@include span(6 of 12);
		}
		.forum--stats {
			@include span(2 of 12);
			text-align: right;
		}
		.forum--author {
			@include span(2 of 12);
			text-align: center;
		}
		.forum--latest {
			@include span(2 of 12);
		}
	}
}

/* 
Posts
 */
.post--container {
	min-width:250px;
	border: 1px solid $scheme-1;
	background: $scheme-3;
	margin-bottom: $space;
	.post--meta {
		td:first-child a {
			color: $scheme-4;
			font-style: italic;			
		}
	}		
	.post--permalink {
		float: right;
	}
	.post--message {
		background: white;
		min-height: 250px;
		@include span(8 of 12);
		td {
			text-align:left;
		}
	}
	.post--author {
		@include span(4 of 12);
		text-align: center;
		background: $scheme-3;
		figure {
			img {
				max-height: 150px;
			}
		}
	}

	@include breakpoint($bp-small) {
		.post--message {
			@include span(8 of 12);
		}
	}
}
.post--edit {
	height: 40px;
	border-bottom: 1px solid $scheme-2;
	background: darken($scheme-3, 10);
	.btn {
		float: right;
		width: auto;
	}
}

/* 
Block hiding
 */
.forum--hide {
	display:none;
}

@include breakpoint($bp-med) {
	.forum--hide {
		display:table-cell;
	}
	html.ielt9 table .forum--hide {
		display: block;
	}
}

/* 
Pagination
 */
.pagination, .btn-new {
	margin-bottom: $space;
	@include span(12 or 12);
	.btn {
		width: 100%;
		margin: 0;
	}

	@include breakpoint($bp-small) {
		@include span(6 of 12);
	}
}
.btn-new {
	padding: 0;
}

/* 
Profile
 */
.profile {
	figure {
		img {
			max-height:200px;
		}
		@include breakpoint($bp-small) {
			@include span(3 of 12);
		}
		@include breakpoint($bp-med) {
			@include span(2 of 12);
		}
	}
	article {
		@include breakpoint($bp-small) {
			@include span(9 of 12);
		}
		@include breakpoint($bp-med) {
			@include span(10 of 12);
		}
	}
	.edit--profile {
		clear:both;
		@include span(6 of 12);
	}
}


//
//START OF EXPERIMENTATION
//
.home {
	//banner transition
	[class*=nner], .banner {
		@include css3-prefix(border-radius, 10%);
		transition:opacity 3s;
		&:hover {
			opacity: 0.5;
			transition:opacity 3s;
		}
	}

	//skill bar transitions and design
	.site-bar, [class^=site-bar] {
		margin: $space 0;
		width: 50%;

		label {
			font:1.2em/1 Verdana;
		}

		 [class=test-bar], .test-bar {
			height:5px;
			width:100%;
			background: white;
			margin-bottom: $space;

			span {
				display: block;
				height: 100%;
				background: #FC5E5E;
			}
		}
	}

	//list transitions
	>section {
		&[class*=container], .container {
			background: white;
		}
		ul {
			li {
				padding:$space;
				font: 1.3em/1 garamond;
			}

			@for $i from 1 through 5 {
				$col : #DDDAF7;
				li:nth-child(#{$i}) {
					padding-left: $i * $space;
					transition: background 1s;
					&:hover {
						transition: background 1s;
						background:darken($col, $i*4);
					}
				}

				li:first-child {
					background: lighten($col, 6);
				}
				li:first-child + li {
					background: lighten($col, 3);
				}
				li:first-child + li + li {
					background: $col;
				}
				li:first-child + li + li + li{
					background: darken($col, 3);
				}
				li:first-child + li + li + li + li{
					background: darken($col, 6);
				}
			}
		}
	}
}

//pulsating ball
@keyframes pulse {
	0%, 100% {
		height:50px;
		width: 50px;
		background: darkred;
		@include css3-prefix(opacity, 0);
	}
	30%, 70% {
		height:100px;
		width: 100px;
		background: #FC5E5E;
		@include css3-prefix(opacity, 0.5);
	}
	50% {
		height:90px;
		width: 90px;
		background: lighten(darkred, 10%);
		@include css3-prefix(opacity, 0.7);
	}
}
@-webkit-keyframes pulse {
	0%, 100% {
		height:50px;
		width: 50px;
		background: darkred;
		@include css3-prefix(opacity, 0);
	}
	30%, 70% {
		height:100px;
		width: 100px;
		background: #FC5E5E;
		@include css3-prefix(opacity, 0.5);
	}
	50% {
		height:90px;
		width: 90px;
		background: lighten(darkred, 10%);
		@include css3-prefix(opacity, 0.7);
	}
}
@-moz-keyframes pulse {
	0%, 100% {
		height:50px;
		width: 50px;
		background: darkred;
		@include css3-prefix(opacity, 0);
	}
	30%, 70% {
		height:100px;
		width: 100px;
		background: #FC5E5E;
		@include css3-prefix(opacity, 0.5);
	}
	50% {
		height:90px;
		width: 90px;
		background: lighten(darkred, 10%);
		@include css3-prefix(opacity, 0.7);
	}
}
@-o-keyframes pulse {
	0%, 100% {
		height:50px;
		width: 50px;
		background: darkred;
		@include css3-prefix(opacity, 0);
	}
	30%, 70% {
		height:100px;
		width: 100px;
		background: #FC5E5E;
		@include css3-prefix(opacity, 0.5);
	}
	50% {
		height:90px;
		width: 90px;
		background: lighten(darkred, 10%);
		@include css3-prefix(opacity, 0.7);
	}
}
.ball {
	@include css3-prefix(border-radius, 50%);
	background: #FC5E5E;
	height:50px;
	width:50px;
	position: absolute;
	top:50%;
	left:50%;
	transform:translate(-50%, -50%);
}
.containa {
	display: block;
	margin: $space auto;
	text-align:center;
	position: relative;
	height: 500px;
	background: #ccc;
	@include css3-prefix(border-radius, 5%);

	&:hover {
		.ball:first-child:not(:only-child) {
			@include css3-prefix(animation, pulse 1s infinite ease-in);
		}
		.ball:nth-child(2) {
			@include css3-prefix(animation, pulse 2s infinite ease-in);
		}
		.ball:nth-child(3) {
			@include css3-prefix(animation, pulse 2s infinite ease-in 1s);
		}
	}
	&:active {
		.ball:first-child:not(:only-child),
		.ball ~ .ball {
			animation-play-state: paused;
		}
	}
}

//rotating four point.. thing (javascript initialisation)
.bx {
	width: 50px;
	height:50px;
	@include css3-prefix(border-radius, 50%);
	background: #FC5E5E;
	position: absolute;
	top:50%;
	left:50%;
	transform:translate(-50%, -50%);
	transition:all 2s;
}
.bx.active:first-child {
	top:45%;
	height:100px;
	transform:rotate(180deg);
	transition:all 2s;
}
.bx.active + .bx.active {
	left:47.5%;
	width: 100px;
	transform:rotate(180deg);
	transition:all 2s;
}

//flag type banner
.hex-container {
	margin: 20px 0 75px;
	-webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor:default;
}
.hex-bar {
	position: relative;
	text-align:center;

	.hexagon {
		height: 130px;
		width: 125px;
	    position: relative;
	    &:first-child {
	    	z-index: 1;
	    }
		&:after {
		    content: '';
		    width: 0;
		    height: 0;
		    position: absolute;
		    top: 130px;
		    left: 0;
		    border-left: 62.5px solid transparent;
		    border-right: 62.5px solid transparent;
		    border-top: 40px solid #fc5e5e;
		}

		& + .hexagon {
			position: absolute;
			top:8px;
			left:3px;
			@include rotate(-2deg);
		}	
	
		span {
			display: block;
			font-size: 4em;
			padding-top: 30%;
		}
	}

	@for $i from 1 through 4 {
		&:nth-child(#{$i}) {
			z-index: -$i; 
		}
	}

	&:nth-child(odd) {
		background: #fc5e5e;
		.hexagon {
			&:first-child {
				background:#fc5e5e;
			}
			&:first-child:after {
				border-top-color:#fc5e5e; 
			}
			& + .hexagon {
				background: darkred;
			}
			& + .hexagon:after {
				border-top-color:darkred;
			}
		}
	}

	&:nth-child(even) {
		margin: 0px 0 0px 50px;
		background: white;
		.hexagon {
			&:first-child {
				background: white;
			}
			&:first-child:after {
				border-top-color: white; 
			}
			& + .hexagon {
				left: 2px;
				background: darken(white, 20);
			}
			& + .hexagon:after {
				border-top-color: darken(white, 20);
			}
		}
	}
}

//responsive hexagons	
.pure-hex {
	width: 22%;
	overflow: hidden;
	display: inline-block;
	margin:-4% 1%;

	//n = every number from 0
	//so: 0+5=5, 1+5=6, 2+5=7, 3+5=8, etc. for however many elements
	&:nth-child(n+5) {
		transform:translate(55%, -22%);
	}
	.sq {
		background: #FC5E5E;
		position: relative;
		span {
			display: block;
			z-index: 1;
			position: absolute;
			font-size: 10vw;
			top:50%;
			left:50%;
			transform:translate(-50%, -50%);
		}
	}
	.sq, .tri {
		padding-bottom:50%;
	}
	.tri {
		position: relative;
		&:first-child {
			&:before {
				content: '';
				position: absolute;
				top:0;
				left:0;
				width: 100%;
				height: 100%;
				background: #FC5E5E;
				transform-origin:0 100%;
				transform: rotate(30deg) skew(-30deg);
			}		
		}

		& ~ .tri {
			&:after {
				content: '';
				position: absolute;
				top:0;
				left:0;
				width: 100%;
				height: 100%;
				background: #FC5E5E;
				transform-origin:100% 0;
				transform: rotate(30deg) skew(-30deg);
			}
		}
	}	
}

//flexbox
/*
.parento {
	//initialises flexbox
	@include flexbox();

	//sets flow of items (shorthand for direction and wrap)
	@include css3-prefix(flex-flow, row wrap);
	
	//[flex-start, flex-end, center, space-between, space-around]
	@include css3-prefix(justify-content, flex-start);

	//[flex-start, flex-end, stretch, center, baseline]
	@include css3-prefix(align-items, stretch);

	//[flex-start, flex-end, center, stretch, space-between, space-around]
	@include css3-prefix(align-content, stretch);

	background: #ccc;
	height: 500px;
	width: 100%;
	.child {
		position: relative;
		background: #999;
		width: 150px;  
		min-height:100px;
		margin: 10px 10px;

		//orders individual children
		//[-:num, 0, +:num]
		&:nth-child(7) {
			@include order(-1);
		}

		//grows specific child relative to siblings when excess space
		//[0, +:num] 0 - default
		&:nth-child(1) {
		 	@include css3-prefix(flex-grow, 0);
		}

		//determines shrinking if no excess space
		//[0, 1, +:num] 1 - default, 0 - no shrinking
		&:nth-child(6) {
			@include css3-prefix(flex-shrink, 0);
		}

		//determines initial size of item before margin
		//[width/height] auto - default
		&:nth-child(6) {
			@include css3-prefix(flex-basis, auto);
		}

		//shorthand for grow, shrink and basis
		//recommended to use, as overwrites previous
		//[grow, shrink, basis]
		&:nth-child(6) {
			@include flex(0 0 50px);
		}

		//aligns individual item (only on nowrap)
		//[flex-start, flex-end, center, stretch, baseline] auto - default
		&:nth-child(6) {
			//@include css3-prefix(align-self, flex-end);
		}

		span {
			font:7vw/1 garamond;
			font-weight: 700;
			position: absolute;
			top:50%;
			left:50%;
			transform:translate(-50%, -50%);
		}
	}
} */



.parento {
	@include css3-prefix(border-radius, 10%);
	@include flexbox();
	min-height:700px;
	width: 100%;
	padding:50px;
	background: #999;

	//sets flex direction and wrap
	@include css3-prefix(flex-flow, row wrap);

	//justifies items on base axis 
	//(if row think text-align, if column think vertical-align)
	@include css3-prefix(justify-content, center);
    -ms-flex-pack: center;

	//aligns flex items along the cross axis of the current line
	//(if row think top:50%/translate(0, -50%), if column think text-align)
	//no space-between/around
	//if align-content is anything other than stretch, then this has no effect
	//stretch - default (only works with min-height/no height. if fixed, stretch results in fixed height)
	align-items: center;

	//aligns lines of flex items (if multi-line) along the cross axis	
	//(if row, think vertical-align, if column, think text-align/float)
	//overrides align-items
	//does nothinng if nowrap
	//stretch - default
	align-content: center;

	.child {
		position: relative;
		width: 200px;
		line-height: 1;
		min-height: 100px;
		margin: 1%;
		padding: 5%;

		@for $i from 1 through 10 {
			&:nth-child(#{$i}) {
				background: darken(#F0F0F0, $i * 2%);
			}
		}

		span{
			display: block;
			font-size: 0.5vw;
			top:50%;
			left:50%;
			transform:translate(-50%, -50%);
			position: absolute;
		}
	}
}